# Pipeline name with build date
name: $(Build.DefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

# Trigger the pipeline on every push to the main branch
trigger:
  branches:
    include:
      - main

# Define pipeline variables
variables:
  node_version: '16.x'

# Stages of the pipeline
stages:
  - stage: Install
    displayName: 'Install Dependencies'
    jobs:
      - job: InstallJob
        displayName: 'Install Node.js and Dependencies'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseNode@2
            displayName: 'Set up Node.js'
            inputs:
              versionSpec: $(node_version)
          - script: |
              yarn install
            displayName: 'Install Dependencies'

  - stage: Test
    displayName: 'Run Tests'
    dependsOn: Install
    jobs:
      - job: TestJob
        displayName: 'Run Unit Tests'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              yarn test
            displayName: 'Run Tests'

  - stage: Build
    displayName: 'Build Stage'
    dependsOn: Test
    jobs:
      - job: BuildJob
        displayName: 'Build Project'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              yarn build
            displayName: 'Build the Project'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Build Artifacts'
            inputs:
              PathtoPublish: 'build'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  # Optional Deploy stage (Customize based on your deployment strategy)
  - stage: Deploy
    displayName: 'Deploy to Production'
    dependsOn: Build
    jobs:
      - deployment: DeployJob
        displayName: 'Deploy Job'
        environment: 'production'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: 'my-azure-subscription'  # Replace with your Azure service connection name
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      # Define variables
                      STORAGE_ACCOUNT_NAME="adminportaldevapnadharm"
                      CONTAINER_NAME="$web"
                      SOURCE_PATH="$(System.DefaultWorkingDirectory)/build"
                    
                      # Upload all files in the source path to the storage container
                      az storage blob upload-batch \
                        --account-name $STORAGE_ACCOUNT_NAME \
                        --destination $CONTAINER_NAME \
                        --source $SOURCE_PATH \
                        --pattern "*"

                      echo "Files successfully uploaded to Azure Storage container."
                  displayName: 'Deploy Application'
